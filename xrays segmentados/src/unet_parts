{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMRBZcFEGlajgT18EvtI7JX"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":401},"id":"onv_ncTtglA9","executionInfo":{"status":"error","timestamp":1717357988071,"user_tz":180,"elapsed":385,"user":{"displayName":"Agust√≠n Ortiz Lattuada","userId":"08575589146462752690"}},"outputId":"084cc4f6-0db4-4613-c335-e11c650cd4f2"},"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"No module named 'unet_parts'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-d683b2ac787e>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnn\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mnn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0munet_parts\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mDoubleConv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mDownSample\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mUpSample\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'unet_parts'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["import torch\n","import torch.nn as nn\n","\n","from unet_parts import DoubleConv, DownSample, UpSample\n","\n","\n","class UNet(nn.Module):\n","    def __init__(self, in_channels, num_classes):\n","        super().__init__()\n","        self.down_convolution_1 = DownSample(in_channels, 64)\n","        self.down_convolution_2 = DownSample(64, 128)\n","        self.down_convolution_3 = DownSample(128, 256)\n","        self.down_convolution_4 = DownSample(256, 512)\n","\n","        self.bottle_neck = DoubleConv(512, 1024)\n","\n","        self.up_convolution_1 = UpSample(1024, 512)\n","        self.up_convolution_2 = UpSample(512, 256)\n","        self.up_convolution_3 = UpSample(256, 128)\n","        self.up_convolution_4 = UpSample(128, 64)\n","\n","        self.out = nn.Conv2d(in_channels=64, out_channels=num_classes, kernel_size=1)\n","\n","    def forward(self, x):\n","       down_1, p1 = self.down_convolution_1(x)\n","       down_2, p2 = self.down_convolution_2(p1)\n","       down_3, p3 = self.down_convolution_3(p2)\n","       down_4, p4 = self.down_convolution_4(p3)\n","\n","       b = self.bottle_neck(p4)\n","\n","       up_1 = self.up_convolution_1(b, down_4)\n","       up_2 = self.up_convolution_2(up_1, down_3)\n","       up_3 = self.up_convolution_3(up_2, down_2)\n","       up_4 = self.up_convolution_4(up_3, down_1)\n","\n","       out = self.out(up_4)\n","       return out"]}]}